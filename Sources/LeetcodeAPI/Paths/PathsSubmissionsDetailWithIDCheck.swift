// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get

public extension Paths.Submissions.Detail.WithID {
    var check: Check {
        Check(path: path + "/check")
    }

    struct Check {
        /// Path: `/submissions/detail/{id}/check`
        public let path: String

        public var get: Request<GetResponse> {
            Request(method: "GET", url: path)
        }

        public enum GetResponse: Decodable {
            case submissionResult(LeetcodeAPI.SubmissionResult)
            case testSubmissionResult(LeetcodeAPI.TestSubmissionResult)

            public init(from decoder: Decoder) throws {
                let container = try decoder.singleValueContainer()
                if let value = try? container.decode(LeetcodeAPI.SubmissionResult.self) {
                    self = .submissionResult(value)
                } else if let value = try? container.decode(LeetcodeAPI.TestSubmissionResult.self) {
                    self = .testSubmissionResult(value)
                } else {
                    throw DecodingError.dataCorruptedError(
                        in: container,
                        debugDescription: "Data could not be decoded as any of the expected types (LeetcodeAPI.SubmissionResult, LeetcodeAPI.TestSubmissionResult)."
                    )
                }
            }
        }
    }
}
