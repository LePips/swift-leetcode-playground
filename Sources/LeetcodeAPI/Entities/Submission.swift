// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct Submission: Codable {
    public var judgeType: JudgeType
    /// Example: "python"
    public var lang: String
    public var questionID: Int
    public var isTestMode: Bool
    /// Example: "print(1)"
    public var typedCode: String

    public enum JudgeType: String, Codable, CaseIterable {
        case large
    }

    public init(judgeType: JudgeType, lang: String, questionID: Int, isTestMode: Bool, typedCode: String) {
        self.judgeType = judgeType
        self.lang = lang
        self.questionID = questionID
        self.isTestMode = isTestMode
        self.typedCode = typedCode
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.judgeType = try values.decode(JudgeType.self, forKey: "judge_type")
        self.lang = try values.decode(String.self, forKey: "lang")
        self.questionID = try values.decode(Int.self, forKey: "question_id")
        self.isTestMode = try values.decode(Bool.self, forKey: "test_mode")
        self.typedCode = try values.decode(String.self, forKey: "typed_code")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(judgeType, forKey: "judge_type")
        try values.encode(lang, forKey: "lang")
        try values.encode(questionID, forKey: "question_id")
        try values.encode(isTestMode, forKey: "test_mode")
        try values.encode(typedCode, forKey: "typed_code")
    }
}
